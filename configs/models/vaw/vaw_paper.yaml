dataset:
  type: VAW
  path: ""
  batch_size: 8
  concurrency: 2
  # classes: if not None, bound the number of classes based on the value (int to choose classes with the highest occurrences, or list with the explicit names)
  classes: ~
  filter_small_instances_threshold: 0.05
  n_samples: ~
  attempt_local_path: ""
  augmentations:
    resize: 224
    normalize: True
  keep_square: False
  filter_cropped_area_ratio: ~

model:
  type: Vaw_paper
  backbone: resnet50
  features_dims: [512, 1024, 2048]
  class_gate_dims: [100, 128, 2048]  # [input, intermediate, output]
  object_localizer_channels: [2048, 256, 1]  # [input, intermediate, output]
  multi_attention_channels: [2048, 256, 1]  # [input, intermediate, output]
  multi_attention_proj_channels: 128
  n_multi_attention: 3
  pretrained_state_dict: ~
  intermediate: ~
  backbone_drop_last: True  # drop the last FC layer when loading backbone
  glove_file_path: ""
  losses:
    w: 1
    lambda_div: 0.004
    lambda_rel: 0.25

trainer:
  s3:
    path: ""
    sync_freq: 1000
  optim:
    lr:
      base: 7.e-4
      backbone: 1.e-5  # can be None to work with base lr only
    schedule: [200000, 400000]
    weight_decay: 1.e-5
  max_epochs: 12
